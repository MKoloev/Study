// Вт лаб3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
//ЗАДАНИЕ
//Вычислить целочисленное выражение, указанное в варианте задания.При этом, и
//операнды и результаты вычислений следует выводить как в десятичном, так и в
//шестнадцатеричном виде.
//ВАРИАНТЫ
//7) A(int), B(dword), C(word).
//Вычислить: D = (С / A)* C + B; E = (B - C) / A * C.

#include <iostream>
#include <iostream>
#include <stdio.h> // необходим для работы printf
#include <conio.h> // необходим для работы _getch();
using namespace std;

int main()
{
    unsigned __int8 A = 20;
    int B = 300;
    __int16 C = 40;
    int D = 0; // D = (С / A) * C + B
    __asm
    {
        mov AX, C; //Заносим переменную C в регистр AX
        idiv A;//делим AX на A;
        imul C; //Умножаем переменную C на регистр AX;результат идёт в пару регистров DX : AX

        ADC AX, word ptr B; //складываем младшую часть B на младшую часть результата умножения 
        ADC DX, word ptr B + 2; //складываем старшую часть B на старшуую часть результата умножения 
        // с учётом флага переноса
        mov word ptr D, AX; //Записываем содержимое регистровDX:AX в переменную D
        mov word ptr D + 2, DX;
    }
    printf("D = ((%d) / (%d)) * (%d) + (%d)\n",C, A, C, B);
    printf("D = %d        D = %X\n\n", D, D);
    
    int E = 0; // E = (B - C) / A * C.
    __asm
    {
        mov AX, word ptr B;//в (DX:AX)  помешаем значение B
        mov DX, word ptr B + 2;
        mov BX, C;
        SUB AX, BX;//AX = AX - BX
        mov BL, A; 
        mov BH, 0;//Расширяем до BX

        IDIV BX;//AX = (DX:AX)/BX   DX = (DX:AX) mod BX
        IMUL C;//(DX:AX) = AX * C(2 байта)

        mov word ptr E, AX;
        mov word ptr E + 2, DX;
    }
    printf("E = ((%d) - (%d)) / (%d) * (%d)\n", B, C, A, C);
    printf("E = %d        E = %X\n\n", E, E);
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
